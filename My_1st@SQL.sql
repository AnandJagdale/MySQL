-- I need hr schema; system will called only those schema which we will have already connected to database
USE HR;

SELECT * FROM EMPLOYEES;

-- Restricting the data [WHERE CLAUSE, AND, OR]

-- One condition
SELECT * FROM EMPLOYEES; 

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, SALARY FROM EMPLOYEES
WHERE SALARY > 12000;

-- Two conditions
SELECT * FROM EMPLOYEES; 

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, SALARY FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG' AND SALARY > 5000;

-- When we use OR clause 1st condition OR 2nd condition it gives result on 1st condition
SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, SALARY FROM EMPLOYEES
WHERE JOB_ID = 'IT_PROG' OR SALARY > 12000;

-- Three conditions
SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE JOB_ID = 'SA_MAN' AND SALARY > 12000 AND MANAGER_ID = 100;

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE JOB_ID = 'SA_MAN' OR SALARY > 12000 AND MANAGER_ID = 100;

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE JOB_ID = 'SA_MAN' OR SALARY >12000 OR MANAGER_ID = 100;

-- IN & NOT IN OPERATOR [IN:- Used for making a list of objects & NOT IN:- Used for removing a list of object from the data]

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE JOB_ID IN ('SA_MAN', 'SA_REP', 'IT_PROG');

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE JOB_ID NOT IN ('SA_MAN', 'SA_REP', 'IT_PROG');

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE SALARY >= 5000 AND SALARY <=10000;

-- BETWEEN OPERATOR [Used for between condition(A-Z)]

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 5000 AND 10000;

-- WILDCARD SEARCHED [Used for searching any particular object by using pattern matching concepts with the help of LIKE & NOT LIKE operator]

SELECT * FROM EMPLOYEES
WHERE JOB_ID LIKE 'IT%'; -- [__% means searched object in JOB_ID column which should be start from IT & ending with any thing doesn't matter]

SELECT * FROM EMPLOYEES
WHERE FIRST_NAME LIKE 'A__x__d%' AND JOB_ID = 'IT_PROG'; -- [A__x__d% means should be start with A & after A any 2 letter then x & after x any 2 letters the d & after d any thing]

SELECT * FROM EMPLOYEES
WHERE LAST_NAME LIKE '%D'; -- [%D means search object in LAST_NAME column which should be end with only D]

SELECT * FROM EMPLOYEES
WHERE EMAIL LIKE 'A%___L%';

SELECT * FROM EMPLOYEES
WHERE EMAIL LIKE '%A___L%';

-- ORDER BY CLAUSE [Sorting the data in Ascending & Descending order]

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 5000 AND 10000
ORDER BY SALARY;   -- Without mentioning order like ASC or DESC sql has default setting Ascending order

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 10000 AND 15000
ORDER BY SALARY DESC; 


SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY FROM EMPLOYEES
WHERE SALARY BETWEEN 1000 AND 5000
ORDER BY JOB_ID DESC, SALARY; -- JOB_ID in descending(Z-A) order & SALARY in ascending(1-2) order

-- WHERE CLAUSE [Used for extracting null values with the help of IS NULL & IS NOT NULL Operator]

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY, COMMISSION_PCT FROM EMPLOYEES
WHERE COMMISSION_PCT IS NULL;

SELECT * FROM EMPLOYEES;

SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME, JOB_ID, MANAGER_ID, SALARY, COMMISSION_PCT FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL;

